version: '3'

services:
  django:
    hostname: django
    build: deploy/python/
#    command: bash -c "python3 manage.py collectstatic --no-input && python3 manage.py makemigrations && python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/chat
      - static_volume:/chat/static
      - media_volume:/chat/media
    networks:
      - nginx_network
    ports:
      - "8000:8000"
    depends_on:
      - psql
      - mongo
      - rabbitmq
    links:
      - psql
      - mongo
      - rabbitmq

  nginx:
    image: nginx:latest
    hostname: nginx
    ports:
      - "8080:80"
    volumes:
      - ./deploy/nginx/chat:/etc/nginx/sites-available/chat
    command: bash -c "cd /etc/nginx/sites-enabled/chat && ln -s /etc/nginx/sites-available/chat "
    depends_on:
      - django
    networks:
      - nginx_network

  psql:
    image: postgres:latest
    restart: always
    hostname: psql
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=Admin14801612
      - POSTGRES_DB=chat
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  mongo:
    image: mongo:latest
    restart: always
    hostname: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=admin
    volumes:
      - ./data/mongo:/var/lib/mongo

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    hostname: rabbitmq
    environment:
      RABBITMQ_ERLANG_COOKIE: "secret string"
      RABBITMQ_NODENAME: rabbit
    volumes:
      - ./deploy/rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config
      - ./deploy/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
    ports:
      - "4369:4369"
      - "5671:5671"
      - "5672:5672"
      - "15671:15671"
      - "15672:15672"
      - "25672:25672"



networks:
  nginx_network:
    driver: bridge


volumes:
  database1_volume:
  static_volume:
  media_volume: